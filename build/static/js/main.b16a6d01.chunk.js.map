{"version":3,"sources":["components/Navigation/Navigation.js","api/apiConfig.js","api/axiosClient.js","api/tmdbApi.js","components/Star/StarSolid.js","components/ResultsCards/ResultsCards.js","components/Topbar/Topbar.js","components/MovieList/MovieListItem/MovieListItem.js","components/MovieList/Arrow/LeftArrow.js","components/MovieList/Arrow/RightArrow.js","components/MovieList/MovieList.js","components/Banner/BannerItem/BannerItem.js","components/Banner/Banner.js","components/ContinueWatching/assets/jurassicworld3.png","pages/Home/Home.js","pages/Downloads/Downloads.js","components/SlideList/SlideItem/SlideItem.js","components/SlideList/SlideList.js","api/genre.js","pages/Movies/Movies.js","pages/MyList/MyList.js","pages/News/News.js","pages/Series/Series.js","pages/Settings/Settings.js","components/Pagination/CustomPagination.js","pages/Movies/Search/Search.js","pages/Movies/YearSelected/YearSelected.js","pages/Movies/GenreSelected/GenreSelected.js","config/configUser.js","pages/Login/Login.js","api/embed.js","components/Video/index.js","components/Overview/index.js","pages/Views/index.js","App.js","index.js"],"names":["Navigation","location","useLocation","id","className","to","pathname","apiConfig","baseUrl","apiKey","originalImage","imgPath","w500Image","w200Image","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","api_key","interceptors","request","use","a","config","response","data","error","category","movie","tv","all","movieType","trending","upcoming","popular","top_rated","tvType","on_the_air","tmdbApi","getTrendingList","url","get","getMoviesList","type","getTvList","getVideos","cate","search","discover","detail","credits","similar","getTVSeasons","season_number","getGenres","StarSolid","xmlns","width","height","viewBox","d","ResultsCards","background","backdrop_path","poster_path","src","alt","title","release_date","slice","first_air_date","vote_average","Topbar","profile_pic","useState","profileSelected","setProfileSelected","genreSelected","setGenreSelected","yearSelected","setYearSelected","fetchURL","genres","setGenres","query","setQuery","results","setResults","currGenres","setCurrGenres","history","useHistory","year","setYear","useEffect","fetchData","res","console","log","fetch","then","json","errors","onClick","Object","values","map","genre","name","style","textDecoration","color","min","value","onKeyUp","e","keyCode","push","onChange","target","placeholder","MovieListItem","props","item","path","LeftArrow","RightArrow","MovieList","list","setList","settings","infinite","slidesToShow","swipeToSlide","nextArrow","prevArrow","responsive","breakpoint","slidesToScroll","with_genres","genre_id","i","BannerItem","listGenresId","listGenresName","original_title","media_type","genre_ids","index","indexOf","undefined","filter","Boolean","toString","replace","overview","length","split","Banner","bannerList","setBannerList","arrows","autoplay","autoplaySpeed","centerPadding","dots","customPaging","getMovies","page","Home","Downloads","SlideItem","SlideList","Movies","News","Series","Settings","darkTheme","createMuiTheme","palette","CustomPagination","setPage","numOfPages","display","justifyContent","marginTop","ThemeProvider","theme","Pagination","textContent","window","scroll","count","Search","content","setContent","setNumOfPages","fectch","total_pages","YearSelected","GenreSelected","users","userName","password","Login","signUp","setSignUp","setUserName","setPassword","confirmAccount","setConfirmAccount","confrimEmail","setConfrimEmail","checkPassword","setCheckPassword","checkConfirmPassword","setCheckConfirmPassword","passwordCurr","setPasswordCurr","emailCurr","setEmailCurr","listUser","handleSignIn","some","user","href","setTimeout","toggleSignUp","onBlur","email","check","test","String","toLowerCase","onKeyDown","confirmPass","embedMovie","embedEpisode","season","episode","Video","paddingBottom","frameBorder","allowFullScreen","Overview","useParams","air_date","Views","setVideos","setBackground","setSrc","setSeasons","setOverview","setTitle","fetchMovie","seasons","responseList","backgroundTemp","titleTemp","document","fetchDetails","responseVideos","episode_number","handleUrl","backgroundImage","App","exact","component","MyList","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b16a6d01.chunk.js","sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SeriesIcon from \"@mui/icons-material/Theaters\";\r\nimport MoviesIcon from \"@mui/icons-material/Movie\";\r\nimport MyListIcon from \"@mui/icons-material/PlaylistPlay\";\r\nimport DownloadsIcon from \"@mui/icons-material/Download\";\r\nimport NewsIcon from \"@mui/icons-material/Forum\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport \"./navigation.scss\";\r\nexport default function Navigation() {\r\n  const location = useLocation();\r\n  return (\r\n    <div id=\"nav\">\r\n      <div className=\"nav-item\">\r\n        <div className=\"logo\">REMO</div>\r\n      </div>\r\n      <Link to=\"/\">\r\n        <div\r\n          className={\r\n            location.pathname === \"/\" ? \"nav-item--activated\" : \"nav-item\"\r\n          }\r\n        >\r\n          <HomeIcon className=\"icon\" />\r\n          Home\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/Series\">\r\n        <div\r\n          className={\r\n            location.pathname === \"/Series\" ? \"nav-item--activated\" : \"nav-item\"\r\n          }\r\n        >\r\n          <SeriesIcon className=\"icon\" />\r\n          Series\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/Movies\">\r\n        <div\r\n          className={\r\n            location.pathname === \"/Movies\" ? \"nav-item--activated\" : \"nav-item\"\r\n          }\r\n        >\r\n          <MoviesIcon className=\"icon\" />\r\n          Movies\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/MyList\">\r\n        <div\r\n          className={\r\n            location.pathname === \"/MyList\" ? \"nav-item--activated\" : \"nav-item\"\r\n          }\r\n        >\r\n          <MyListIcon className=\"icon\" />\r\n          MyList\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/Downloads\">\r\n        <div\r\n          className={\r\n            location.pathname === \"/Downloads\"\r\n              ? \"nav-item--activated\"\r\n              : \"nav-item\"\r\n          }\r\n        >\r\n          <DownloadsIcon className=\"icon\" />\r\n          Downloads\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/News\">\r\n        <div\r\n          className={\r\n            location.pathname === \"/News\" ? \"nav-item--activated\" : \"nav-item\"\r\n          }\r\n        >\r\n\r\n          <NewsIcon className=\"icon\" />\r\n          News\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/Settings\">\r\n        <div\r\n          className={\r\n            location.pathname === \"/Settings\"\r\n              ? \"nav-item--activated\"\r\n              : \"nav-item\"\r\n          }\r\n        >\r\n          <SettingsIcon className=\"icon\" />\r\n          Settings\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","const apiConfig = {\r\n  baseUrl: \"https://api.themoviedb.org/3/\",\r\n  apiKey: \"85250e67dc2bb1a56f48a965b58ed848\",\r\n  originalImage: (imgPath) => `https://image.tmdb.org/t/p/original/${imgPath}`,\r\n  w500Image: (imgPath) => `https://image.tmdb.org/t/p/w500/${imgPath}`,\r\n  w200Image: (imgPath) => `https://image.tmdb.org/t/p/w200/${imgPath}`,\r\n};\r\nexport default apiConfig;\r\n","import axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n\r\nimport apiConfig from \"./apiConfig\";\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: apiConfig.baseUrl,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  paramsSerializer: (params) =>\r\n    queryString.stringify({ ...params, api_key: apiConfig.apiKey }),\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => config);\r\n\r\naxiosClient.interceptors.response.use(\r\n  (response) => {\r\n    if (response && response.data) {\r\n      return response.data;\r\n    }\r\n\r\n    return response;\r\n  },\r\n  (error) => {\r\n    throw error;\r\n  }\r\n);\r\n\r\nexport default axiosClient;\r\n","import axiosClient from \"./axiosClient\";\r\n\r\nexport const category = {\r\n  movie: \"movie\",\r\n  tv: \"tv\",\r\n  all: \"all\",\r\n};\r\n\r\nexport const movieType = {\r\n  trending: \"trending\",\r\n  upcoming: \"upcoming\",\r\n  popular: \"popular\",\r\n  top_rated: \"top_rated\",\r\n};\r\n\r\nexport const tvType = {\r\n  trending: \"trending\",\r\n  popular: \"popular\",\r\n  top_rated: \"top_rated\",\r\n  on_the_air: \"on_the_air\",\r\n};\r\n\r\nconst tmdbApi = {\r\n  getTrendingList: (category, params) => {\r\n    const url = `trending/${category}/week`;\r\n    return axiosClient.get(url, params);\r\n  },\r\n  getMoviesList: (type, params) => {\r\n    const url = `movie/${movieType[type]}`;\r\n    return axiosClient.get(url, params);\r\n  },\r\n  getTvList: (type, params) => {\r\n    const url = `tv/${tvType[type]}`;\r\n    return axiosClient.get(url, params);\r\n  },\r\n  getVideos: (cate, id) => {\r\n    const url = `${category[cate]}/${id}/videos`;\r\n    return axiosClient.get(url, { params: {} });\r\n  },\r\n  search: (cate, params) => {\r\n    const url = `search/${category[cate]}`;\r\n    return axiosClient.get(url, params);\r\n  },\r\n  discover: (cate, params) => {\r\n    const url = `discover/${category[cate]}`;\r\n    return axiosClient.get(url, params);\r\n  },\r\n  detail: (cate, id, params) => {\r\n    const url = `${category[cate]}/${id}`;\r\n    return axiosClient.get(url, params);\r\n  },\r\n  credits: (cate, id) => {\r\n    const url = `${category[cate]}/${id}/credits`;\r\n    return axiosClient.get(url, { params: {} });\r\n  },\r\n  similar: (cate, id) => {\r\n    const url = `${category[cate]}/${id}/similar`;\r\n    return axiosClient.get(url, { params: {} });\r\n  },\r\n  getTVSeasons: (id, season_number) => {\r\n    const url = `tv/${id}/season/${season_number}`;\r\n    return axiosClient.get(url, { params: {} });\r\n  },\r\n  getGenres: () => {\r\n    const url = `/genre/movie/list`;\r\n    return axiosClient.get(url, { params: {} });\r\n  },\r\n};\r\n\r\nexport default tmdbApi;\r\n","import \"./star.scss\";\r\nconst StarSolid = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"13\"\r\n    height=\"13\"\r\n    viewBox=\"0 0 24 24\"\r\n    className=\"star\"\r\n  >\r\n    <path d=\"M21.947 9.179a1.001 1.001 0 0 0-.868-.676l-5.701-.453-2.467-5.461a.998.998 0 0 0-1.822-.001L8.622 8.05l-5.701.453a1 1 0 0 0-.619 1.713l4.213 4.107-1.49 6.452a1 1 0 0 0 1.53 1.057L12 18.202l5.445 3.63a1.001 1.001 0 0 0 1.517-1.106l-1.829-6.4 4.536-4.082c.297-.268.406-.686.278-1.065z\"></path>\r\n  </svg>\r\n);\r\nexport default StarSolid;\r\n","import React from \"react\";\r\nimport apiConfig from \"../../api/apiConfig\";\r\nimport StarSolid from \"../Star/StarSolid\";\r\nimport \"./ResultsCards.scss\";\r\nexport default function ResultsCards({ movie }) {\r\n  const background = apiConfig.w500Image(\r\n    movie.backdrop_path ? movie.backdrop_path : movie.poster_path\r\n  );\r\n  return (\r\n    <div className=\"result-container\">\r\n      <img src={background} alt={`${movie.title} Poster`} />\r\n      <div className=\"container\">\r\n        <span className=\"listTitle\">{movie.title}</span>\r\n        <div className=\"details\">\r\n          <div className=\"year\">\r\n            {movie.release_date\r\n              ? movie.release_date.slice(0, 4)\r\n              : movie.first_air_date\r\n              ? movie.first_air_date.slice(0, 4)\r\n              : \"\"}{\" \"}\r\n            - {movie.vote_average} <StarSolid />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./topbar.scss\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { category, movieType, tvType } from \"../../api/tmdbApi\";\r\nimport tmdbApi from \"../../api/tmdbApi\";\r\nimport apiConfig from \"../../api/apiConfig\";\r\nimport axios from \"axios\";\r\n// minh\r\nimport { Link } from \"react-router-dom\";\r\nimport ResultsCards from \"../ResultsCards/ResultsCards\";\r\n\r\nexport default function Topbar() {\r\n  const profile_pic =\r\n    \"https://i.pinimg.com/originals/2b/90/0d/2b900d5612554cd0b5edf7d8e848c3ea.png\";\r\n\r\n  const [profileSelected, setProfileSelected] = useState(false);\r\n  const [genreSelected, setGenreSelected] = useState(false);\r\n  const [yearSelected, setYearSelected] = useState(false);\r\n\r\n  const API_KEY = \"85250e67dc2bb1a56f48a965b58ed848\";\r\n  const fetchURL = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`;\r\n  const [genres, setGenres] = useState([]);\r\n  //search\r\n  const [query, setQuery] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n  //genre\r\n  const [currGenres, setCurrGenres] = useState(\"All genres\");\r\n  //year\r\n  const history = useHistory();\r\n  const [year, setYear] = useState(\"All time\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(fetchURL);\r\n        setGenres(res.data.genres);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [fetchURL]);\r\n  useEffect(() => {\r\n    fetch(\r\n      `\r\n      https://api.themoviedb.org/3/search/movie?api_key=${apiConfig.apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (!data.errors) {\r\n          setResults(data.results);\r\n        } else {\r\n          setResults([]);\r\n        }\r\n        console.log(results);\r\n      });\r\n  }, [query]);\r\n\r\n  // useEffect(() => {\r\n  //   const fectch = async () => {\r\n  //     const params = {\r\n  //       query: query,\r\n  //     };\r\n  //     const data = await tmdbApi.search(category.movie, { params });\r\n  //     if (!data.errors) {\r\n  //       setResults(data.results);\r\n  //     } else {\r\n  //       setResults([]);\r\n  //     }\r\n\r\n  //     console.log(data);\r\n  //   };\r\n  //   fectch();\r\n  // }, [query]);\r\n\r\n  return (\r\n    <div id=\"top-bar\">\r\n      <div className=\"left\">\r\n        <div className=\"boxContainer\">\r\n          <div\r\n            className=\"genreBox\"\r\n            onClick={() => {\r\n              setGenreSelected(!genreSelected);\r\n              setYearSelected(false);\r\n              setProfileSelected(false);\r\n            }}\r\n          >\r\n            <span> {currGenres}</span>\r\n            <KeyboardArrowDownIcon />\r\n          </div>\r\n          {genreSelected && (\r\n            <div className=\"genreSelect\">\r\n              {Object.values(genres).map((genre) => (\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Movies/GenreSelected/${genre.name}`,\r\n                    id: `${genre.id}`,\r\n                  }}\r\n                  style={{ textDecoration: \"none\", color: \"white\" }}\r\n                >\r\n                  <span\r\n                    className=\"genre\"\r\n                    name={genre.id}\r\n                    onClick={() => {\r\n                      setCurrGenres(genre.name);\r\n                      setGenreSelected(false);\r\n                    }}\r\n                  >\r\n                    {genre.name}\r\n                  </span>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"boxContainer\">\r\n          <div\r\n            className=\"yearBox\"\r\n            onClick={() => {\r\n              setYearSelected(!yearSelected);\r\n              setGenreSelected(false);\r\n              setProfileSelected(false);\r\n            }}\r\n          >\r\n            <span>{year}</span>\r\n            <KeyboardArrowDownIcon />\r\n          </div>\r\n          {yearSelected && (\r\n            <div className=\"yearSelect\">\r\n              <span>All time</span>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1990\"\r\n                value={year}\r\n                onKeyUp={(e) => {\r\n                  if (e.keyCode === 13) {\r\n                    history.push(`/Movies/YearSelected/${year}`);\r\n                    setYearSelected(false);\r\n                  }\r\n                }}\r\n                onChange={(e) => setYear(e.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"middle\">\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search Movies, TV series,...\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n          />\r\n          <div className=\"searchIcon\">\r\n            <Link\r\n              to={{\r\n                pathname: `/Movies/Search/${query}`,\r\n                query: `${query}`,\r\n              }}\r\n            >\r\n              <SearchIcon className=\"icon\" onClick={() => setQuery(\"\")} />\r\n            </Link>\r\n          </div>\r\n        </form>\r\n        {results && (\r\n          <ul className=\"results\">\r\n            {results.map((movie) => (\r\n              <li key={movie.id}>\r\n                <ResultsCards movie={movie} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <div className=\"right\">\r\n        <NotificationsIcon className=\"icon\" />\r\n        <div className=\"profile\">\r\n          <div\r\n            className=\"main-profile\"\r\n            onClick={() => {\r\n              setProfileSelected(!profileSelected);\r\n              setGenreSelected(false);\r\n              setYearSelected(false);\r\n            }}\r\n          >\r\n            <img src={profile_pic} alt=\"profile_pic\" />\r\n            <span className=\"username\">Ngyn Ngyn</span>\r\n            <KeyboardArrowDownIcon className=\"icon\" />\r\n          </div>\r\n          {profileSelected && (\r\n            <div className=\"options\">\r\n              <div className=\"otherUsers\">\r\n                <div className=\"user\">\r\n                  <img src={profile_pic} alt=\"profile_pic\" />\r\n                  <span className=\"username\">Ngyn Ngyn</span>\r\n                </div>\r\n                <div className=\"user\">\r\n                  <img src={profile_pic} alt=\"profile_pic\" />\r\n                  <span className=\"username\">Ngyn Ngyn</span>\r\n                </div>\r\n                <div className=\"user\">\r\n                  <img src={profile_pic} alt=\"profile_pic\" />\r\n                  <span className=\"username\">Ngyn Ngyn</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"menu\">\r\n                <span>Account</span>\r\n                <span>Help Center</span>\r\n                {/* <span onClick={routeChange}>Log Out</span> */}\r\n                <Link to=\"/Login\">\r\n                  <span>Log Out</span>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import apiConfig from \"../../../api/apiConfig\";\r\nimport \"./movieListItem.scss\";\r\nimport StarSolid from \"../../Star/StarSolid\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieListItem = (props) => {\r\n  // const { item } = props;\r\n  const { item, category } = props;\r\n\r\n  const background = apiConfig.w500Image(\r\n    item.backdrop_path ? item.backdrop_path : item.poster_path\r\n  );\r\n  const path =\r\n    category === \"movie\" ? `/views/movie/${item.id}/play` : `views/tv/${item.id}/play`;\r\n\r\n  // const pathInfo =\r\n  //   category === \"movie\" ? `/movie/${item.id}` : `/tv/${item.id}`;\r\n\r\n  return (\r\n    <div className=\"MovieListItem\">\r\n      <div className=\"wrap-img\">\r\n        <img src={background} alt=\"movie-img\" />\r\n        <Link to={path}>\r\n          <div className=\"play-btn-outer\">\r\n              <div className=\"play-btn\">\r\n              </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n      <div className=\"item-info\"></div>\r\n      <div className=\"title\">{item.title || item.name}</div>\r\n      <div className=\"details\">\r\n        <div className=\"year\">\r\n          {item.release_date\r\n            ? item.release_date.slice(0, 4)\r\n            : item.first_air_date\r\n            ? item.first_air_date.slice(0, 4)\r\n            : \"\"}{\" \"}\r\n          - {item.vote_average} <StarSolid />\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieListItem;\r\n","import ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nconst LeftArrow = (props) => (\r\n  <div onClick={props.onClick} className=\"icon leftArrow\">\r\n    <ChevronLeftIcon />\r\n  </div>\r\n);\r\nexport default LeftArrow;\r\n","import ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nconst RightArrow = (props) => (\r\n  <div onClick={props.onClick} className=\"icon rightArrow\">\r\n    <ChevronRightIcon />\r\n  </div>\r\n);\r\nexport default RightArrow;\r\n","import MovieListItem from \"./MovieListItem/MovieListItem\";\r\nimport \"./movieList.scss\";\r\nimport LeftArrow from \"./Arrow/LeftArrow\";\r\nimport RightArrow from \"./Arrow/RightArrow\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport tmdbApi, { category, movieType, tvType } from \"../../api/tmdbApi\";\r\n\r\nexport default function MovieList(props) {\r\n  const [list, setList] = useState([]);\r\n  // const genre = Object.keys(MovieListRequest)[];\r\n  const settings = {\r\n    infinite: true,\r\n    slidesToShow: 6,\r\n    // slidesToScroll: 2,\r\n    swipeToSlide: true,\r\n    nextArrow: <RightArrow />,\r\n    prevArrow: <LeftArrow />,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1700,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 4,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 1280,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 913,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 650,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let response = null;\r\n      let params = {};\r\n\r\n      if (props.type !== \"similar\") {\r\n        switch (props.category) {\r\n          case category.movie:\r\n            if (props.type) {\r\n              if (props.type === movieType.trending) {\r\n                response = await tmdbApi.getTrendingList(props.category, {\r\n                  params,\r\n                });\r\n              } else {\r\n                response = await tmdbApi.getMoviesList(props.type, { params });\r\n              }\r\n            } else {\r\n              params = {\r\n                with_genres: props.genre_id,\r\n              };\r\n              response = await tmdbApi.discover(category.movie, { params });\r\n            }\r\n            break;\r\n          default:\r\n            if (props.type === tvType.trending) {\r\n              response = await tmdbApi.getTrendingList(props.category, {\r\n                params,\r\n              });\r\n            } else {\r\n              response = await tmdbApi.getTvList(props.type, { params });\r\n            }\r\n            break;\r\n        }\r\n      } else {\r\n        response = await tmdbApi.similar(props.category, props.id);\r\n      }\r\n      setList(response.results);\r\n    };\r\n    fetchData();\r\n  }, [props.id, props.category, props.type]);\r\n  return (\r\n    <div className=\"list\">\r\n      <span className=\"listTitle\">{props.title}</span>\r\n      <div className=\"wrapper\">\r\n        <Slider {...settings}>\r\n          {list &&\r\n            list.map((item, i) => (\r\n              <MovieListItem key={i} item={item} category={props.category} />\r\n            ))}\r\n        </Slider>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./bannerItem.scss\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport tmdbApi from \"../../../api/tmdbApi\";\r\nimport apiConfig from \"../../../api/apiConfig\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst BannerItem = ({ item }) => {\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getGenres = async () => {\r\n      const response = await tmdbApi.getGenres();\r\n      setGenres(Object.values(response)[\"0\"]);\r\n    };\r\n    getGenres();\r\n  }, [item]);\r\n  const listGenresId = genres.map((genre) => genre.id);\r\n  const listGenresName = genres.map((genre) => genre.name);\r\n\r\n  const background = apiConfig.originalImage(\r\n    item.backdrop_path ? item.backdrop_path : item.poster_path\r\n  );\r\n  const path = `/views/movie/${item.id}/play`;\r\n\r\n  return (\r\n    <div className=\"bannerContent\">\r\n      <>\r\n        <img className=\"img\" src={background} alt=\"\" />\r\n        <div className=\"filter\"></div>\r\n        <div className=\"slide-info\">\r\n          <div className=\"tag\">\r\n            <span>Popular Movies &amp; Series</span>\r\n          </div>\r\n          <div className=\"title\">\r\n            {item.name ? item.name : item.original_title}\r\n          </div>\r\n          <div className=\"yearGenre\">\r\n            <span name=\"year\">\r\n              {item.first_air_date\r\n                ? item.first_air_date.slice(0, 4)\r\n                : item.release_date.slice(0, 4)}\r\n            </span>\r\n            <span className=\"separator\">|</span>\r\n            <span name=\"duration\">\r\n              {item.media_type === \"tv\" ? \"Series\" : \"Movie\"}\r\n            </span>\r\n            <span className=\"separator\">|</span>\r\n            <span name=\"genre\">\r\n              {item.genre_ids\r\n                .map((id) => {\r\n                  let index = listGenresId.indexOf(id);\r\n                  return index === undefined ? null : listGenresName[index];\r\n                })\r\n                .filter(Boolean)\r\n                .toString()\r\n                .replace(/,/g, \", \")}\r\n            </span>\r\n          </div>\r\n          <div className=\"desc\">\r\n            <span>\r\n              {item.overview.length < 200\r\n                ? item.overview\r\n                : item.overview.split(\".\")[0] + \"...\"}\r\n            </span>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <Link to={path}>\r\n            <button className=\"watchBtn\">\r\n              <PlayArrowIcon className=\"playIcon\" />\r\n              <span>Watch</span>\r\n            </button>\r\n            </Link>\r\n\r\n            {/* <button className=\"addPlaylistBtn\">\r\n              <AddIcon />\r\n              <span>My Playlist</span>\r\n            </button> */}\r\n          </div>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerItem;\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./banner.scss\";\r\nimport React from \"react\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport BannerItem from \"./BannerItem/BannerItem\";\r\nimport tmdbApi, { category } from \"../../api/tmdbApi\";\r\n\r\nexport default function Banner() {\r\n  const [bannerList, setBannerList] = useState([]);\r\n  const max_banner_item = 6; // be hon 20\r\n\r\n  const settings = {\r\n    arrows: false,\r\n    infinite: true,\r\n    autoplay: true,\r\n    autoplaySpeed: 5000,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    centerPadding: 0,\r\n    swipeToSlide: true,\r\n    dots: true,\r\n    customPaging: () => <div className=\"dots\"></div>,\r\n  };\r\n  useEffect(() => {\r\n    const getMovies = async () => {\r\n      const params = { page: 1 };\r\n      const response = await tmdbApi.getTrendingList(category.all, {\r\n        params,\r\n      });\r\n      setBannerList(response.results.slice(0, max_banner_item));\r\n      console.log(bannerList);\r\n    };\r\n    getMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"banner\">\r\n      <Slider {...settings}>\r\n        {bannerList.map((item) => {\r\n          return <BannerItem item={item} />;\r\n        })}\r\n      </Slider>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/jurassicworld3.fa5542e8.png\";","import MovieList from \"../../components/MovieList/MovieList\";\r\nimport Banner from \"../../components/Banner/Banner\";\r\nimport ContinueWatching from \"../../components/ContinueWatching/ContinueWatching\";\r\nimport \"./home.scss\";\r\nimport { category, movieType, tvType } from \"../../api/tmdbApi\";\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <Banner />\r\n      {/* <ContinueWatching /> */}\r\n      <div className=\"movieListContainer\">\r\n        <MovieList\r\n          category={category.movie}\r\n          type={movieType.trending}\r\n          title=\"Trending Movies\"\r\n        />\r\n\r\n        <MovieList\r\n          category={category.tv}\r\n          type={tvType.trending}\r\n          title=\"Trending TV\"\r\n        />\r\n\r\n        <MovieList\r\n          category={category.movie}\r\n          type={movieType.top_rated}\r\n          title=\"Top Rated Movies\"\r\n        />\r\n\r\n        <MovieList\r\n          category={category.tv}\r\n          type={tvType.top_rated}\r\n          title=\"Top Rated TV\"\r\n        />\r\n\r\n        <MovieList\r\n          category={category.movie}\r\n          type={movieType.popular}\r\n          title=\"Popular Movies\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./downloads.scss\";\r\nexport default function Downloads() {\r\n  return (\r\n    <div className=\"downloads\">\r\n      <div className=\"main-title\">Downloads</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport apiConfig from \"../../../api/apiConfig\";\r\nimport StarSolid from \"../../Star/StarSolid\";\r\nimport \"./SlideItem.scss\";\r\nexport default function SlideItem(props) {\r\n  const { item } = props;\r\n  const background = apiConfig.w500Image(\r\n    item.backdrop_path ? item.backdrop_path : item.poster_path\r\n  );\r\n  return (\r\n    <div className=\"slide-item\">\r\n      <img className=\"slide-img\" src={background} alt={item.title} />\r\n      <div className=\"slide-info\">\r\n        <div className=\"slide-title\">{item.title || item.title}</div>\r\n        <div className=\"slide-year\">\r\n          {item.release_date\r\n            ? item.release_date.slice(0, 4)\r\n            : item.first_air_date\r\n            ? item.first_air_date.slice(0, 4)\r\n            : \"\"}{\" \"}\r\n          - {item.vote_average} <StarSolid />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport tmdbApi from \"../../api/tmdbApi\";\r\nimport LeftArrow from \"../MovieList/Arrow/LeftArrow\";\r\nimport RightArrow from \"../MovieList/Arrow/RightArrow\";\r\nimport SlideItem from \"./SlideItem/SlideItem\";\r\nimport { category, movieType, tvType } from \"../../api/tmdbApi\";\r\nimport Slider from \"react-slick\";\r\nimport \"./SlideList.scss\";\r\nexport default function SlideList(props) {\r\n  const [list, setList] = useState([]);\r\n  const settings = {\r\n    infinite: true,\r\n    slidesToShow: 3,\r\n    // slidesToScroll: 2,\r\n    swipeToSlide: true,\r\n    arrows: false,\r\n    autoplay: true,\r\n    autoplaySpeed: 5000,\r\n  };\r\n  useEffect(() => {\r\n    const getMovies = async () => {\r\n      const params = { page: 1 };\r\n      const response = await tmdbApi.getMoviesList(props.type, {\r\n        params,\r\n      });\r\n      setList(response.results.slice());\r\n      console.log(list);\r\n    };\r\n    getMovies();\r\n  }, [props.type]);\r\n\r\n  return (\r\n    <div className=\"slide-list\">\r\n      <div className=\"slide-wrapper\">\r\n        <Slider {...settings}>\r\n          {list &&\r\n            list.map((item) => (\r\n              <SlideItem item={item} category={category.movie} />\r\n            ))}\r\n        </Slider>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const genre = [\r\n  {\r\n    id: 28,\r\n    name: \"Action\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Adventure\",\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Animation\",\r\n  },\r\n  {\r\n    id: 35,\r\n    name: \"Comedy\",\r\n  },\r\n  {\r\n    id: 80,\r\n    name: \"Crime\",\r\n  },\r\n  {\r\n    id: 99,\r\n    name: \"Documentary\",\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Drama\",\r\n  },\r\n  {\r\n    id: 10751,\r\n    name: \"Family\",\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Fantasy\",\r\n  },\r\n  {\r\n    id: 36,\r\n    name: \"History\",\r\n  },\r\n  {\r\n    id: 27,\r\n    name: \"Horror\",\r\n  },\r\n  {\r\n    id: 10402,\r\n    name: \"Music\",\r\n  },\r\n  {\r\n    id: 9648,\r\n    name: \"Mystery\",\r\n  },\r\n  {\r\n    id: 10749,\r\n    name: \"Romance\",\r\n  },\r\n  {\r\n    id: 878,\r\n    name: \"Science Fiction\",\r\n  },\r\n  {\r\n    id: 10770,\r\n    name: \"TV Movie\",\r\n  },\r\n  {\r\n    id: 53,\r\n    name: \"Thriller\",\r\n  },\r\n  {\r\n    id: 10752,\r\n    name: \"War\",\r\n  },\r\n  {\r\n    id: 37,\r\n    name: \"Western\",\r\n  },\r\n];\r\nexport default genre;\r\n","import { useEffect, useState } from \"react\";\r\nimport tmdbApi, { category, movieType, tvType } from \"../../api/tmdbApi\";\r\nimport MovieList from \"../../components/MovieList/MovieList\";\r\nimport SlideList from \"../../components/SlideList/SlideList\";\r\nimport \"./movies.scss\";\r\nimport genre from \"../../api/genre\";\r\n\r\nexport default function Movies() {\r\n  return (\r\n    <div className=\"movies\">\r\n      <div className=\"main-title\">Movies For You</div>\r\n      <SlideList type={movieType.popular} />\r\n      <div className=\"movieListContainer\">\r\n        <MovieList\r\n          category={category.movie}\r\n          genre_id={genre[0].id}\r\n          title={genre[0].name}\r\n        />\r\n        <MovieList\r\n          category={category.movie}\r\n          genre_id={genre[3].id}\r\n          title={genre[3].name}\r\n        />\r\n        <MovieList\r\n          category={category.movie}\r\n          genre_id={genre[6].id}\r\n          title={genre[6].name}\r\n        />\r\n        <MovieList\r\n          category={category.movie}\r\n          genre_id={genre[2].id}\r\n          title={genre[2].name}\r\n        />\r\n        <MovieList\r\n          category={category.movie}\r\n          genre_id={genre[8].id}\r\n          title={genre[8].name}\r\n        />\r\n        <MovieList\r\n          category={category.movie}\r\n          genre_id={genre[10].id}\r\n          title={genre[10].name}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./myList.scss\";\r\nexport default function News() {\r\n  return (\r\n    <div className=\"myList\">\r\n      <div className=\"main-title\">My List</div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./news.scss\";\r\nexport default function News() {\r\n  return (\r\n    <div className=\"news\">\r\n      <div className=\"main-title\">News</div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./series.scss\";\r\nexport default function Series() {\r\n  return (\r\n    <div className=\"series\">\r\n      <div className=\"main-title\">Series</div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./settings.scss\";\r\nexport default function Settings() {\r\n  return (\r\n    <div className=\"settings\">\r\n      <div className=\"settings-container\">\r\n        <div className=\"main-title\">Settings</div>\r\n        <div className=\"settings-title\">Notification</div>\r\n        <section className=\"sub-container\">\r\n          <div>Your Movie</div>\r\n          <section className=\"settings-items\">\r\n            <div className=\"settings-item\">\r\n              <div>\r\n                <span>Recommended Movie</span>\r\n                <p>Movie we find that you'll like</p>\r\n              </div>\r\n              <label className=\"check-button\">\r\n                <input type=\"checkbox\" />\r\n                <span className=\"check-slider\"></span>\r\n              </label>\r\n            </div>\r\n            <div className=\"settings-item\">\r\n              <div>\r\n                <span>New Movie</span>\r\n                <p>New movies from genres you like</p>\r\n              </div>\r\n              <label className=\"check-button\">\r\n                <input type=\"checkbox\" />\r\n                <span className=\"check-slider\"></span>\r\n              </label>\r\n            </div>\r\n            <div className=\"settings-item\">\r\n              <div>\r\n                <span>News Update</span>\r\n                <p>Get the hottest news everyday</p>\r\n              </div>\r\n              <label className=\"check-button\">\r\n                <input type=\"checkbox\" />\r\n                <span className=\"check-slider\"></span>\r\n              </label>\r\n            </div>\r\n          </section>\r\n          <div className=\"sub-title\">Buster Update</div>\r\n          <section className=\"settings-items\">\r\n            <div className=\"settings-item\">\r\n              <div>\r\n                <span>Product News</span>\r\n                <p>New features and latest product update on Buster</p>\r\n              </div>\r\n              <label className=\"check-button\">\r\n                <input type=\"checkbox\" />\r\n                <span className=\"check-slider\"></span>\r\n              </label>\r\n            </div>\r\n            <div className=\"settings-item\">\r\n              <div>\r\n                <span>Deal and Offers</span>\r\n                <p>Promos and events for you</p>\r\n              </div>\r\n              <label className=\"check-button\">\r\n                <input type=\"checkbox\" />\r\n                <span className=\"check-slider\"></span>\r\n              </label>\r\n            </div>\r\n          </section>\r\n        </section>\r\n        <div className=\"settings-title\">Display Options</div>\r\n        <section className=\"sub-container\">\r\n          <section className=\"settings-items\">\r\n            <div className=\"settings-item\">\r\n              <div>\r\n                <span>Language</span>\r\n              </div>\r\n              <label className=\"check-button\">\r\n                <input type=\"checkbox\" />\r\n                <span className=\"check-slider\"></span>\r\n              </label>\r\n            </div>\r\n            <div className=\"settings-item\">\r\n              <div>\r\n                <span>Font Size</span>\r\n              </div>\r\n              <label className=\"check-button\">\r\n                <input type=\"checkbox\" />\r\n                <span className=\"check-slider\"></span>\r\n              </label>\r\n            </div>\r\n          </section>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Pagination from \"@material-ui/lab/Pagination\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nexport default function CustomPagination({ setPage, numOfPages = 10 }) {\r\n  const handlePageChange = (page) => {\r\n    setPage(page);\r\n    window.scroll(0, 0);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        marginTop: 10,\r\n      }}\r\n    >\r\n      <ThemeProvider theme={darkTheme}>\r\n        <Pagination\r\n          onChange={(e) => handlePageChange(e.target.textContent)}\r\n          count={numOfPages}\r\n          color=\"primary\"\r\n        />\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport apiConfig from \"../../../api/apiConfig\";\r\nimport tmdbApi from \"../../../api/tmdbApi\";\r\nimport MovieListItem from \"../../../components/MovieList/MovieListItem/MovieListItem\";\r\nimport { category, movieType, tvType } from \"../../../api/tmdbApi\";\r\nimport CustomPagination from \"../../../components/Pagination/CustomPagination\";\r\nexport default function Search() {\r\n  const location = useLocation();\r\n  const { query } = location;\r\n\r\n  // const category = \"movie\";\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [content, setContent] = useState([]);\r\n  const [numOfPages, setNumOfPages] = useState();\r\n\r\n  useEffect(() => {\r\n    const fectch = async () => {\r\n      const params = {\r\n        query: query,\r\n        page: page,\r\n      };\r\n      const data = await tmdbApi.search(category.movie, { params });\r\n      setContent(data.results);\r\n      setNumOfPages(data.total_pages);\r\n      console.log(data);\r\n    };\r\n    fectch();\r\n  }, [query, page]);\r\n\r\n  return (\r\n    <div className=\"filter-list\">\r\n      <span className=\"listTitle\">{query}</span>\r\n      <div className=\"movie-wrapper\">\r\n        <div className=\"container\">\r\n          {content.map((item, i) => (\r\n            <div className=\"item\">\r\n              <MovieListItem key={i} item={item} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {numOfPages > 1 && (\r\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MovieListItem from \"../../../components/MovieList/MovieListItem/MovieListItem\";\r\nimport CustomPagination from \"../../../components/Pagination/CustomPagination\";\r\nimport tmdbApi from \"../../../api/tmdbApi\";\r\nimport { category, movieType, tvType } from \"../../../api/tmdbApi\";\r\nimport { useLocation } from \"react-router\";\r\nexport default function YearSelected() {\r\n  const location = useLocation();\r\n\r\n  // const [year, setYear] = useState(location.pathname.slice(21));\r\n  const [page, setPage] = useState(1);\r\n  const [content, setContent] = useState([]);\r\n  const [numOfPages, setNumOfPages] = useState();\r\n  const year = location.pathname.slice(21);\r\n  useEffect(() => {\r\n    // setYear(location.pathname.slice(21));\r\n    const fectch = async () => {\r\n      const params = {\r\n        year: year,\r\n        page: page,\r\n      };\r\n      const data = await tmdbApi.discover(category.movie, { params });\r\n      setContent(data.results);\r\n      setNumOfPages(data.total_pages);\r\n      console.log(data);\r\n    };\r\n    fectch();\r\n  }, [year, page]);\r\n  return (\r\n    <div className=\"filter-list\">\r\n      <span className=\"listTitle\">{year}</span>\r\n      <div className=\"movie-wrapper\">\r\n        <div className=\"container\">\r\n          {content.map((item, i) => (\r\n            <div className=\"item\">\r\n              <MovieListItem key={i} item={item} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {numOfPages > 1 && (\r\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport MovieListItem from \"../../../components/MovieList/MovieListItem/MovieListItem\";\r\nimport CustomPagination from \"../../../components/Pagination/CustomPagination\";\r\nimport tmdbApi from \"../../../api/tmdbApi\";\r\nimport { category, movieType, tvType } from \"../../../api/tmdbApi\";\r\nexport default function GenreSelected() {\r\n  const location = useLocation();\r\n  const { id } = location;\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [content, setContent] = useState([]);\r\n  const [numOfPages, setNumOfPages] = useState();\r\n\r\n  useEffect(() => {\r\n    const fectch = async () => {\r\n      const params = {\r\n        with_genres: id,\r\n        page: page,\r\n      };\r\n      const data = await tmdbApi.discover(category.movie, { params });\r\n      setContent(data.results);\r\n      setNumOfPages(data.total_pages);\r\n      console.log(data);\r\n    };\r\n    fectch();\r\n  }, [id, page]);\r\n  return (\r\n    <div className=\"filter-list\">\r\n      <span className=\"listTitle\">{location.pathname.slice(22)}</span>\r\n      <div className=\"movie-wrapper\">\r\n        <div className=\"container\">\r\n          {content.map((item, i) => (\r\n            <div className=\"item\">\r\n              <MovieListItem key={i} item={item} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {numOfPages > 1 && (\r\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","const users = [\r\n    {\r\n        userName: 'buster@gmail.com',\r\n        password: '123456'\r\n    }\r\n];\r\n\r\nexport default users","import { useState } from 'react'\r\nimport users from '../../config/configUser'\r\nimport ErrorIcon from '@mui/icons-material/Error'\r\nimport EmailIcon from '@mui/icons-material/Email'\r\nimport PasswordIcon from '@mui/icons-material/Password'\r\nimport \"./login.scss\"\r\nexport default function Login() {\r\n    const [signUp, setSignUp ] = useState(false)\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmAccount, setConfirmAccount] = useState(false)\r\n    const [confrimEmail, setConfrimEmail] = useState(false)\r\n    const [checkPassword, setCheckPassword] = useState(false)\r\n    const [checkConfirmPassword, setCheckConfirmPassword] = useState(false)\r\n    const [passwordCurr, setPasswordCurr] = useState('')\r\n    const [emailCurr, setEmailCurr] = useState('')\r\n    const [checkSingUp, setCheckSignUp] = useState(false)\r\n    let listUser = users\r\n\r\n    const getUserName = (e) => {\r\n        setUserName(e.target.value)\r\n    }\r\n    const getPassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n    const handleSignIn = () => {\r\n        let confirm = listUser.some(user => user.userName === userName && user.password === password)\r\n        if(confirm) {\r\n            window.location.href = 'http://localhost:3000/'\r\n        }\r\n        else {\r\n            setConfirmAccount(true)\r\n            setTimeout(() => {\r\n                setConfirmAccount(false)\r\n            }, 2500)\r\n        }\r\n    }\r\n    const handleEnter = (e) => {\r\n        if(e.keyCode === 13) {\r\n            handleSignIn()\r\n        }\r\n    }\r\n    const handleEmail = (e) => {\r\n        const email = e.target.value\r\n        setEmailCurr(email)\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        const check = re.test(String(email).toLowerCase())\r\n        if(!check && signUp) {\r\n            setConfrimEmail(true)\r\n        }\r\n        else {\r\n            setConfrimEmail(false)\r\n        }\r\n    }\r\n    const handlePassword = (e) => {\r\n        const password = e.target.value\r\n        setPasswordCurr(password)\r\n        if(password.length < 6 && signUp){\r\n            setCheckPassword(true)\r\n        }\r\n        else {\r\n            setCheckPassword(false)\r\n        }\r\n    }\r\n    const handleConfirmPassword = (e) => {\r\n        const confirmPass = e.target.value\r\n        if(confirmPass !== passwordCurr) {\r\n            setCheckConfirmPassword(true)\r\n        }\r\n        else {\r\n            setCheckConfirmPassword(false)\r\n        }\r\n    }\r\n    const handleSignUp = () => {\r\n        const check = !confrimEmail && !checkPassword && !checkConfirmPassword\r\n        console.log(check)\r\n        if(check) {\r\n            console.log(listUser)\r\n            listUser.push({\r\n                userName: emailCurr,\r\n                password: passwordCurr,\r\n            })\r\n            toggleSignUp()\r\n        }\r\n    }\r\n\r\n    const toggleSignUp = () => {\r\n        setSignUp(!signUp)\r\n    }\r\n    return (\r\n        <div id=\"login\">\r\n            <div className=\"mask\"></div>\r\n            <div className=\"container\">\r\n                <h1>BUSTER</h1>\r\n                <h2>Sign in</h2>\r\n                <div className=\"login-social\">\r\n                    <button className=\"login-gg\">\r\n                        Continue with Google\r\n                    </button>\r\n                    <button className=\"login-fb\">\r\n                    </button>\r\n                </div>\r\n                <p className=\"or\">or</p>\r\n                <div className=\"login-box\">\r\n                    <label>Email address</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"User Name...\"\r\n                        onChange={getUserName}\r\n                        onBlur={handleEmail}\r\n                    />\r\n                    <label>Password</label>\r\n                    <input \r\n                        type=\"password\"\r\n                        onChange={getPassword}\r\n                        onKeyDown={handleEnter}\r\n                        onBlur={handlePassword}\r\n                    />\r\n                    {signUp && \r\n                    <>\r\n                        <label>Confirm Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            onBlur={handleConfirmPassword}\r\n                        />\r\n                    </>}\r\n                </div>\r\n                <p className=\"forgot\">Forgot password?</p>\r\n                {!signUp && \r\n                <button \r\n                    className=\"btn-signin\"\r\n                    onClick={handleSignIn}\r\n                >\r\n                    SIGN IN\r\n                </button>\r\n                }\r\n                {signUp && \r\n                <button \r\n                    className=\"btn-signup\"\r\n                    onClick={handleSignUp}\r\n                >\r\n                    SIGN UP\r\n                </button>}\r\n                {!signUp && <p>Don't have an account <span onClick={toggleSignUp}>Sign up</span></p>}\r\n                {signUp && <p>You have an account <span onClick={toggleSignUp}>Sign in</span></p>}\r\n            </div>\r\n            <div className={`notice account ${confirmAccount ? 'display' : 'hidden'}`} >\r\n                <ErrorIcon />\r\n                <div className=\"incorrect-detail\">\r\n                    <h3>Unsuccess</h3>\r\n                    <p>User name or password is incorrect</p>\r\n                </div>\r\n            </div>\r\n            <div className={`notice email ${confrimEmail ? 'display' : 'hidden'}`} >\r\n                <EmailIcon />\r\n                <div className=\"incorrect-detail\">\r\n                    <h3>Warning</h3>\r\n                    <p>Emaild invalid</p>\r\n                </div>\r\n            </div>\r\n            <div className={`notice password ${checkPassword ? 'display' : 'hidden'}`} >\r\n                <PasswordIcon />\r\n                <div className=\"incorrect-detail\">\r\n                    <h3>Warning</h3>\r\n                    <p>Password must has at leat 6 characters</p>\r\n                </div>\r\n            </div>\r\n            <div className={`notice confirm-password ${checkConfirmPassword ? 'display' : 'hidden'}`} >\r\n                <PasswordIcon />\r\n                <div className=\"incorrect-detail\">\r\n                    <h3>Warning</h3>\r\n                    <p>Confirm password incorrect!!!</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","const embedMovie = (id) => `https://www.2embed.ru/embed/tmdb/movie?id=${id}`;\r\nconst embedEpisode = (id, season, episode) =>\r\n  `https://www.2embed.ru/embed/tmdb/tv?id=${id}&s=${season}&e=${episode}`;\r\n\r\nexport { embedMovie, embedEpisode };\r\n","import \"./video.scss\"\r\nconst Video = ({ src }) => {\r\n    return (\r\n        <div\r\n            className=\"video\"\r\n            style={{ paddingBottom: '55%' }}\r\n        >\r\n            <iframe\r\n                src={src}\r\n                frameBorder=\"0\"\r\n                allowFullScreen\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;","import { useParams } from 'react-router';\r\nimport \"./overview.scss\"\r\nconst Overview = (props) => {\r\n    const { title, overview } = props;\r\n    const { category } = useParams();\r\n\r\n    return (\r\n        <div className=\"overview\">\r\n            <h1>{title}</h1>\r\n            {category === 'tv' && (\r\n                <h2 className=\"episode-name\">\r\n                    Episode name:&nbsp;{overview.name || overview.title}\r\n                </h2>\r\n            )}\r\n            <p>{overview.overview}</p>\r\n            <div>\r\n                Release Date:&nbsp;\r\n                {overview.first_air_date ||\r\n                    overview.release_date ||\r\n                    overview.air_date}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview;","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport apiConfig from '../../api/apiConfig';\r\nimport tmdbApi from '../../api/tmdbApi';\r\nimport { embedMovie, embedEpisode } from '../../api/embed';\r\nimport Iframe from '../../components/MovieDetails/Iframe';\r\nimport Video from '../../components/Video';\r\nimport Overview from '../../components/Overview';\r\nimport MovieList from \"../../components/MovieList/MovieList\";\r\nimport \"./view.scss\"\r\n\r\nfunction Views() {\r\n    const { category, id } = useParams();\r\n    const [videos, setVideos] = useState([]);\r\n    const [background, setBackground] = useState('');\r\n    const [src, setSrc] = useState('');\r\n    const [seasons, setSeasons] = useState([]);\r\n    const [overview, setOverview] = useState({});\r\n    const [title, setTitle] = useState([]);\r\n    const [movieDetails, setMovieDetails] = useState({});\r\n\r\n    const fetchMovie = async () => {\r\n        const params = {};\r\n        const response = await tmdbApi.detail(category, id, { params });\r\n        if (category === 'tv') {\r\n            setSeasons(response.seasons);\r\n            setOverview(response);\r\n        } else {\r\n            setOverview(response);\r\n            const responseList = await tmdbApi.getTrendingList(category, {\r\n                params,\r\n            });\r\n            setSeasons(responseList.results);\r\n        }\r\n        const backgroundTemp = response.backdrop_path\r\n            ? response.backdrop_path\r\n            : response.poster_path;\r\n        setBackground(backgroundTemp);\r\n\r\n        const titleTemp = response.title ? response.title : response.name;\r\n        document.title = `${titleTemp} - BUSTER`;\r\n        setTitle(titleTemp);\r\n    }\r\n\r\n    const handleUrl = (season=1, episode=overview) => {\r\n        // setPreloader(true);\r\n        if (category === 'movie') {\r\n            setSrc(embedMovie(id));\r\n        }\r\n         else {\r\n            setOverview(episode);\r\n            if (episode.episode_number) {\r\n                setSrc(embedEpisode(id, season, episode.episode_number));\r\n            } else {\r\n                setSrc(embedEpisode(id, season, 1));\r\n            }\r\n        }\r\n        // setPreloader(false);\r\n        // handleScrollToTop();\r\n    };\r\n    const fetchDetails = async () => {\r\n        // const params = {};\r\n        // const response = await tmdbApi.detail(category, id, { params });\r\n        // setMovieDetails(response);\r\n\r\n        const responseVideos = await tmdbApi.getVideos(category, id);\r\n        setVideos(responseVideos.results);\r\n\r\n        // const title = response.title ? response.title : response.name;\r\n        // document.title = `${title} - Ax Nguyen`;\r\n        // setPreloader(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchMovie();\r\n        handleUrl();\r\n        fetchDetails();\r\n    }, [id]);\r\n\r\n    return (\r\n        <div \r\n            className=\"views\"\r\n            style={{\r\n                backgroundImage: `url(${apiConfig.originalImage(background)})`,\r\n            }}\r\n        >\r\n            <div className=\"views-top\">\r\n                <div className=\"views-top-left\">\r\n                    <Overview title={title} overview={overview}/>\r\n                </div>\r\n                <div className=\"views-top-right\">\r\n                    <Video src={src} />\r\n                </div>\r\n            </div>\r\n            <div className=\"views-bot\">\r\n                <ul className=\"bot-more-title\">\r\n                    <h4 className=\"more-title-1 active\">SIMILAR</h4>\r\n                    {/* <h4 className=\"more-title-2\">DETAILS</h4> */}\r\n                </ul>\r\n                <div className=\"bot-more-content\">\r\n                    <div className=\"more-content-1\">\r\n                        <MovieList\r\n                            category={category}\r\n                            type=\"similar\"\r\n                            // title=\"Similar\"\r\n                            id={id}\r\n                        />\r\n                    </div>\r\n                    {/* <div className=\"more-content-2\">\r\n                        ...\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Views;","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Navigation from \"./components/Navigation/Navigation\";\r\nimport Topbar from \"./components/Topbar/Topbar\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Downloads from \"./pages/Downloads/Downloads\";\r\nimport Movies from \"./pages/Movies/Movies\";\r\nimport MyList from \"./pages/MyList/MyList\";\r\nimport News from \"./pages/News/News\";\r\nimport Series from \"./pages/Series/Series\";\r\nimport Settings from \"./pages/Settings/Settings\";\r\nimport Search from \"./pages/Movies/Search/Search\";\r\nimport YearSelected from \"./pages/Movies/YearSelected/YearSelected\";\r\nimport GenreSelected from \"./pages/Movies/GenreSelected/GenreSelected\";\r\nimport Login from \"./pages/Login/Login\"\r\nimport Views from \"./pages/Views\"\r\nimport \"./app.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div>\r\n          <Navigation />\r\n          <Topbar />\r\n        </div>\r\n        <Switch>\r\n          <div className=\"main-container\">\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/Downloads\" component={Downloads} />\r\n            <Route exact path=\"/Movies\" component={Movies} />\r\n            <Route exact path=\"/MyList\" component={MyList} />\r\n            <Route exact path=\"/News\" component={News} />\r\n            <Route exact path=\"/Series\" component={Series} />\r\n            <Route exact path=\"/Settings\" component={Settings} />\r\n            \r\n            <Route path=\"/views/:category/:id\" component={Views} />\r\n\r\n            <Route exact path=\"/Movies/Search/:query\" component={Search} />\r\n            <Route exact path=\"/Movies/YearSelected/:year\" component={YearSelected} />\r\n            <Route exact path=\"/Movies/GenreSelected/:genre\" component={GenreSelected} />\r\n          </div>\r\n        </Switch>\r\n        <Switch>\r\n          <Route exact path=\"/Login\" component={Login} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}